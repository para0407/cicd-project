pipeline {
    agent any

    environment {
        DOCKER_REGISTRY = ""
        IMAGE_NAME = "my-app"
        KUBECONFIG = credentials('kubeconfig')  // Use K8s credentials from Jenkins
    }

    stages {
        stage('Clone Repository') {
            steps {
                git branch: 'main', url: 'https://github.com/Stark-Repo/k8s.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    dockerImage = docker.build("${DOCKER_REGISTRY}/${IMAGE_NAME}:latest")
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', 'docker_hub credentials') {
                        dockerImage.push()
                        dockerImage.push('latest')  // Tag it as 'latest'
                    }
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                sh '''
                kubectl apply -f k8s/deployment.yaml
                kubectl rollout status deployment my-app
                '''
            }
        }

        stage('Post-deployment Tests') {
            steps {
                sh '''
                kubectl get pods -n default
                curl http://my-app-service:80/health
                '''
            }
        }
    }

    post {
        success {
            echo 'Pipeline executed successfully!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}
